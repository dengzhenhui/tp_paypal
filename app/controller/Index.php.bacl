<?php

namespace app\controller;


use PayPal\Api\Amount;
use PayPal\Api\Payer;
use PayPal\Api\Payment;
use PayPal\Api\RedirectUrls;
use PayPal\Api\Transaction;
use PayPal\Auth\OAuthTokenCredential;
use PayPal\Exception\PayPalConnectionException;
use PayPal\Rest\ApiContext;
use think\facade\Log;

/**
 * 前台
 * Class Index
 * @package app\controller
 */
class Index
{

    public function index() {
        return 'index';
    }


    public function callBack()
    {
        Log::INFO("php://input");
    }
    public function cancleBack()
    {
        Log::INFO("php://input");
    }

    public function testPalpay()
    {
        $baseUrl = 'https://9e94d517c32a.ngrok.io';
        // After Step 1
        $apiContext = new ApiContext(
            new OAuthTokenCredential(
                'Afywo0dusL4VtltplfEV6-giTBl3y3NB6RpB43rFbyF9rGjIKvPve28HDgVhikbJxtyx_CmXac3-DxKO',     // ClientID
                'EDIvDcj-cmY33a2GmDLJdLsEVKhYDZNlgedXAE4NkQO97Eo0voFtrjzAN-IMzGQbfk8IoTtfpSys4cyS'      // ClientSecret
            )
        );

        $apiContext->setConfig(
            array(
                'mode' => 'sandbox',
                'log.LogEnabled' => true,
                'log.FileName' => 'PayPal.log',
                'log.LogLevel' => 'DEBUG', // PLEASE USE `INFO` LEVEL FOR LOGGING IN LIVE ENVIRONMENTS
                'cache.enabled' => true,
                // 'http.CURLOPT_CONNECTTIMEOUT' => 30
                // 'http.headers.PayPal-Partner-Attribution-Id' => '123123123'
                //'log.AdapterFactory' => '\PayPal\Log\DefaultLogFactory' // Factory class implementing \PayPal\Log\PayPalLogFactory
            )
        );
        // After Step 2
        $payer = new Payer();

        $payer->setPaymentMethod('paypal');

        $amount = new Amount();

        $amount->setTotal('1.00');
        $amount->setCurrency('USD');

        $transaction = new Transaction();
        $transaction->setAmount($amount);

        $redirectUrls = new RedirectUrls();
        $redirectUrls->setReturnUrl($baseUrl.'/callBack')
            ->setCancelUrl($baseUrl.'/cancleBack');

        $payment = new Payment();
        $payment->setIntent('sale')
            ->setPayer($payer)
            ->setTransactions(array($transaction))
            ->setRedirectUrls($redirectUrls);
        // After Step 3
        try {
            $payment->create($apiContext);
            $approvalUrl = $payment->getApprovalLink();
            var_dump($approvalUrl);
            //header("Location: {$approvalUrl}");
        }
        catch (PayPalConnectionException $ex) {
            // This will print the detailed information on the exception.
            //REALLY HELPFUL FOR DEBUGGING
            echo $ex->getData();
        }

    }
}
